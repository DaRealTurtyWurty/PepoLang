// This file is automatically generated. Do not modify.
package dev.turtywurty.pepolang.parser;

import dev.turtywurty.pepolang.JavaGenerated;
import dev.turtywurty.pepolang.parser.Statement.AssignStatement;
import dev.turtywurty.pepolang.parser.Statement.BlockStatement;
import dev.turtywurty.pepolang.parser.Statement.BreakStatement;
import dev.turtywurty.pepolang.parser.Statement.ClassStatement;
import dev.turtywurty.pepolang.parser.Statement.ConstructorStatement;
import dev.turtywurty.pepolang.parser.Statement.ContinueStatement;
import dev.turtywurty.pepolang.parser.Statement.ExpressionStatement;
import dev.turtywurty.pepolang.parser.Statement.FunctionStatement;
import dev.turtywurty.pepolang.parser.Statement.IfStatement;
import dev.turtywurty.pepolang.parser.Statement.ReturnStatement;
import dev.turtywurty.pepolang.parser.Statement.VariableStatement;
import dev.turtywurty.pepolang.parser.Statement.WhileStatement;

@JavaGenerated
public interface StatementVisitor<R> {
    R visitBlockStatement(BlockStatement statement);

    R visitFunctionStatement(FunctionStatement statement);

    R visitVariableStatement(VariableStatement statement);

    R visitClassStatement(ClassStatement statement);

    R visitConstructorStatement(ConstructorStatement statement);

    R visitExpressionStatement(ExpressionStatement statement);

    R visitIfStatement(IfStatement statement);

    R visitAssignStatement(AssignStatement statement);

    R visitWhileStatement(WhileStatement statement);

    R visitBreakStatement(BreakStatement statement);

    R visitContinueStatement(ContinueStatement statement);

    R visitReturnStatement(ReturnStatement statement);
}
