// This file is automatically generated. Do not modify.
package dev.turtywurty.pepolang.parser;

import dev.turtywurty.pepolang.JavaGenerated;
import dev.turtywurty.pepolang.parser.Expression.Assign;
import dev.turtywurty.pepolang.parser.Expression.Binary;
import dev.turtywurty.pepolang.parser.Expression.Call;
import dev.turtywurty.pepolang.parser.Expression.Extends;
import dev.turtywurty.pepolang.parser.Expression.Function;
import dev.turtywurty.pepolang.parser.Expression.Get;
import dev.turtywurty.pepolang.parser.Expression.Grouping;
import dev.turtywurty.pepolang.parser.Expression.Literal;
import dev.turtywurty.pepolang.parser.Expression.Logical;
import dev.turtywurty.pepolang.parser.Expression.New;
import dev.turtywurty.pepolang.parser.Expression.Set;
import dev.turtywurty.pepolang.parser.Expression.Super;
import dev.turtywurty.pepolang.parser.Expression.This;
import dev.turtywurty.pepolang.parser.Expression.Unary;
import dev.turtywurty.pepolang.parser.Expression.Variable;

@JavaGenerated
public interface ExpressionVisitor<R> {
    R visitAssign(Assign expression);

    R visitBinary(Binary expression);

    R visitCall(Call expression);

    R visitNew(New expression);

    R visitGet(Get expression);

    R visitSet(Set expression);

    R visitThis(This expression);

    R visitSuper(Super expression);

    R visitGrouping(Grouping expression);

    R visitLiteral(Literal expression);

    R visitLogical(Logical expression);

    R visitUnary(Unary expression);

    R visitVariable(Variable expression);

    R visitFunction(Function expression);

    R visitExtends(Extends expression);
}
